@page "/customers"
@using Haram.RemittanceSystem.Currencies
@using Haram.RemittanceSystem.Customers
@using Haram.RemittanceSystem.Localization
@using Haram.RemittanceSystem.Permissions
@using Volo.Abp.Application.Dtos
@using Haram.RemittanceSystem.Remittances
@using Microsoft.Extensions.Localization
@using Volo.Abp.AspNetCore.Components.Web
@using Haram.RemittanceSystem.RemittanceTypes
@using Haram.RemittanceSystem.Genders

@attribute [Authorize(RemittanceSystemPermissions.Customers.Default)]

@inject ICurrencyAppService currencyappservice
@inject IStringLocalizer<RemittanceSystemResource> L
@inject AbpBlazorMessageLocalizerHelper<RemittanceSystemResource> LH
@inherits AbpCrudPageBase<ICustomerAppService, CustomerDto, Guid, PagedAndSortedResultRequestDto, CreateUpdateCustomerDto>

<Card>
-        <CardHeader>
            <Row Class="justify-content-between">
                <Column ColumnSize="ColumnSize.IsAuto">
                <h2>@L["Customers"]</h2>
                </Column>
                <Column ColumnSize="ColumnSize.IsAuto">
                    <Button Color="Color.Primary"
                            Clicked="OpenCreateModalAsync">
                    @L["NewCustomer"]
                    </Button>
                </Column>
            </Row>
        </CardHeader>
    <CardBody>
        <DataGrid TItem="CustomerDto"
                  Data="Entities"
                  ReadData="OnDataGridReadAsync"
                  TotalItems="TotalCount"
                  ShowPager="true"
                  PageSize="PageSize"
        >

            <DataGridColumns>

                <DataGridEntityActionsColumn TItem="CustomerDto" @ref="@EntityActionsColumn">
                    <DisplayTemplate>
                        <EntityActions TItem="CustomerDto" EntityActionsColumn="@EntityActionsColumn">
                            <EntityAction TItem="CustomerDto"
                                          Text=@L["Edit"]
                                          Clicked="() => OpenEditModalAsync(context)" />
                            <EntityAction TItem="CustomerDto"
                                          Text=@L["Delete"]
                                          Clicked="() => DeleteEntityAsync(context)"
                                          ConfirmationMessage="()=>GetDeleteConfirmationMessage(context)" />
                        </EntityActions>
                    </DisplayTemplate>
                </DataGridEntityActionsColumn>
                <DataGridColumn TItem="CustomerDto"
                                Field="@nameof(CustomerDto.FirstName)"
                                Caption="@L["FirstName"]">
                    <DisplayTemplate>
                        @context.FirstName
                    </DisplayTemplate>
                </DataGridColumn>

                <DataGridColumn TItem="CustomerDto"
                                Field="@nameof(CustomerDto.LastName)"
                                Caption="@L["LastName"]">
                    <DisplayTemplate>
                        @context.LastName
                    </DisplayTemplate>
                </DataGridColumn>

                <DataGridColumn TItem="CustomerDto"
                                Field="@nameof(CustomerDto.FatherName)"
                                Caption="@L["FatherName"]">
                    <DisplayTemplate>
                        @context.FatherName
                    </DisplayTemplate>
                </DataGridColumn>


                <DataGridColumn TItem="CustomerDto"
                                Field="@nameof(CustomerDto.Phone)"
                                Caption="@L["MotherName"]">
                    <DisplayTemplate>
                        @context.Phone
                    </DisplayTemplate>
                </DataGridColumn>
                <DataGridColumn TItem="CustomerDto"
                                Field="@nameof(CustomerDto.Address)"
                                Caption="@L["Address"]">
                    <DisplayTemplate>
                        @context.Address
                    </DisplayTemplate>
                </DataGridColumn>
                <DataGridColumn TItem="CustomerDto"
                                Field="@nameof(CustomerDto.FatherName)"
                                Caption="@L["Gender"]">
                    <DisplayTemplate>
                        @L[$"Enum:Gender.{(int)context.CustGender}"]
                    </DisplayTemplate>
                </DataGridColumn>

                <DataGridColumn TItem="CustomerDto"
                                Field="@nameof(CustomerDto.BirthDate)"
                                Caption="@L["BirthDate"]">
                    <DisplayTemplate>
                        @context.BirthDate.ToShortDateString()
                    </DisplayTemplate>
                </DataGridColumn>

                <DataGridColumn TItem="CustomerDto"
                                Field="@nameof(CustomerDto.CreationTime)"
                                Caption="@L["Regsterdin"]">
                    <DisplayTemplate>
                        @context.CreationTime.ToShortDateString()
                    </DisplayTemplate>
                </DataGridColumn>

            </DataGridColumns>
        </DataGrid>
    </CardBody>
</Card>


<Modal @ref="@CreateModal">
    <ModalBackdrop />
    <ModalContent IsCentered="true">
        <Form>
            <ModalHeader>
                <ModalTitle>@L["NewCustomer"]</ModalTitle>
                <CloseButton Clicked="CloseCreateModalAsync"/>
            </ModalHeader>
            <ModalBody>
                <Validations @ref="@CreateValidationsRef" Model="@NewEntity" ValidateOnLoad="false">
                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                                <FieldLabel>@L["FirstName"]</FieldLabel>
                            <TextEdit @bind-Text="@NewEntity.FirstName">
                                <Feedback>
                                    <ValidationError/>
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>
                        <Validation MessageLocalizer="@LH.Localize">
                            <Field>
                                <FieldLabel>@L["LastName"]</FieldLabel>
                                <TextEdit @bind-Text="@NewEntity.LastName">
                                    <Feedback>
                                        <ValidationError />
                                    </Feedback>
                                </TextEdit>
                            </Field>
                        </Validation>

                        <Validation MessageLocalizer="@LH.Localize">
                            <Field>
                                <FieldLabel>@L["FatherName"]</FieldLabel>
                                <TextEdit @bind-Text="@NewEntity.FatherName">
                                    <Feedback>
                                        <ValidationError />
                                    </Feedback>
                                </TextEdit>
                            </Field>
                        </Validation>

                        <Validation MessageLocalizer="@LH.Localize">
                            <Field>
                                <FieldLabel>@L["MotherName"]</FieldLabel>
                                <TextEdit @bind-Text="@NewEntity.MotherName">
                                    <Feedback>
                                        <ValidationError />
                                    </Feedback>
                                </TextEdit>
                            </Field>
                        </Validation>

                    <Field>
                       <FieldLabel>@L["Gender"]</FieldLabel>
                       <Select TValue="Gender" @bind-SelectedValue="@NewEntity.CustGender">
                           @foreach (int gender in Enum.GetValues(typeof(Gender)))
                       {
                           <SelectItem TValue="Gender" Value="@((Gender) gender)">
                                    @L[$"Enum:Gender.{(int)gender}"]
                           </SelectItem>
                       }
                        </Select>
                    </Field>
                    <Field>
                        <FieldLabel>@L["BirthDate"]</FieldLabel>
                            <Addons>
                                <Addon AddonType="AddonType.Body">
                                    <DatePicker @ref="@datePicker" TValue="DateTime" @bind-Date="@NewEntity.BirthDate" />
                                </Addon>
                                <Addon AddonType="AddonType.End">
                                    <Button Color="Color.Light" Clicked="@(()=>datePicker.ToggleAsync())">
                                        <Icon Name="IconName.CalendarDay" />
                                    </Button>
                                </Addon>
                            </Addons>
                        </Field>

                        <Validation MessageLocalizer="@LH.Localize">
                            <Field>
                                <FieldLabel>@L["Address"]</FieldLabel>
                                <TextEdit @bind-Text="@NewEntity.Address">
                                    <Feedback>
                                        <ValidationError />
                                    </Feedback>
                                </TextEdit>
                            </Field>
                        </Validation>

                        <Validation MessageLocalizer="@LH.Localize">
                            <Field>
                                <FieldLabel>@L["Phone"]</FieldLabel>
                                <TextEdit @bind-Text="@NewEntity.Phone">
                                    <Feedback>
                                        <ValidationError />
                                    </Feedback>
                                </TextEdit>
                            </Field>
                        </Validation>

                </Validations>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary"
                        Clicked="CloseCreateModalAsync">@L["Cancel"]</Button>
                <Button Color="Color.Primary"
                        Type="@ButtonType.Submit"
                        PreventDefaultOnSubmit="true"
                        Clicked="CreateEntityAsync">@L["Save"]</Button>
            </ModalFooter>
        </Form>
    </ModalContent>
</Modal>

<Modal @ref="@EditModal">
    <ModalBackdrop />
    <ModalContent IsCentered="true">
        <Form>
            <ModalHeader>
                <ModalTitle>@EditingEntity.FirstName-@EditingEntity.LastName</ModalTitle>
                <CloseButton Clicked="CloseEditModalAsync"/>
            </ModalHeader>
            <ModalBody>
                <Validations @ref="@EditValidationsRef" Model="@EditingEntity" ValidateOnLoad="false">
                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                                <FieldLabel>@L["FirstName"]</FieldLabel>
                            <TextEdit @bind-Text="@EditingEntity.FirstName">
                                <Feedback>
                                    <ValidationError/>
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>
                        <Validation MessageLocalizer="@LH.Localize">
                            <Field>
                                <FieldLabel>@L["LastName"]</FieldLabel>
                                <TextEdit @bind-Text="@EditingEntity.FirstName">
                                    <Feedback>
                                        <ValidationError />
                                    </Feedback>
                                </TextEdit>
                            </Field>
                        </Validation>

                        <Validation MessageLocalizer="@LH.Localize">
                            <Field>
                                <FieldLabel>@L["FatherName"]</FieldLabel>
                                <TextEdit @bind-Text="@EditingEntity.FatherName">
                                    <Feedback>
                                        <ValidationError />
                                    </Feedback>
                                </TextEdit>
                            </Field>
                        </Validation>

                        <Validation MessageLocalizer="@LH.Localize">
                            <Field>
                                <FieldLabel>@L["MotherName"]</FieldLabel>
                                <TextEdit @bind-Text="@EditingEntity.MotherName">
                                    <Feedback>
                                        <ValidationError />
                                    </Feedback>
                                </TextEdit>
                            </Field>
                        </Validation>

                         <Field>
                            <FieldLabel>@L["Gender"]</FieldLabel>
                            <Select TValue="Gender" @bind-SelectedValue="@EditingEntity.CustGender">
                                @foreach (int gender in Enum.GetValues(typeof(Gender)))
                            {
                                <SelectItem TValue="Gender" Value="@((Gender) gender)">
                                    @L[$"Enum:Gender.{(int)gender}"]
                                </SelectItem>
                            }
                        </Select>
                    </Field>
                    <Field>
                        <FieldLabel>@L["BirthDate"]</FieldLabel>
                            <DateEdit TValue="DateTime" @bind-Date="@EditingEntity.BirthDate" />
                        </Field>
                        <Validation MessageLocalizer="@LH.Localize">
                            <Field>
                                <FieldLabel>@L["Address"]</FieldLabel>
                                <TextEdit @bind-Text="@EditingEntity.Address">
                                    <Feedback>
                                        <ValidationError />
                                    </Feedback>
                                </TextEdit>
                            </Field>
                        </Validation>

                        <Validation MessageLocalizer="@LH.Localize">
                            <Field>
                                <FieldLabel>@L["Phone"]</FieldLabel>
                                <TextEdit @bind-Text="@EditingEntity.Phone">
                                    <Feedback>
                                        <ValidationError />
                                    </Feedback>
                                </TextEdit>
                            </Field>
                        </Validation>

                </Validations>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary"
                        Clicked="CloseEditModalAsync">@L["Cancel"]</Button>
                <Button Color="Color.Primary"
                        Type="@ButtonType.Submit"
                        PreventDefaultOnSubmit="true"
                        Clicked="UpdateEntityAsync">@L["Save"]</Button>
            </ModalFooter>
        </Form>
    </ModalContent>
</Modal>
@code{
    DatePicker<DateTime> datePicker;
}

