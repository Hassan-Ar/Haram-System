@page "/releasedremittances"
@using Haram.RemittanceSystem.Currencies
@using Haram.RemittanceSystem.Customers
@using Haram.RemittanceSystem.Localization
@using Haram.RemittanceSystem.Permissions
@using Haram.RemittanceSystem.StatusTypes
@using Volo.Abp.Application.Dtos
@using Haram.RemittanceSystem.Remittances
@using Microsoft.Extensions.Localization
@using Volo.Abp.AspNetCore.Components.Web
@using Haram.RemittanceSystem.RemittanceTypes
@attribute [Authorize(RemittanceSystemPermissions.Remittances.Default)]
@inject ICurrencyAppService currencyappservice
@inject ICustomerAppService customerappservice
@inject IRemittanceAppServices remittanceappservice
@inject IStringLocalizer<RemittanceSystemResource> L
@inject AbpBlazorMessageLocalizerHelper<RemittanceSystemResource> LH
@inherits AbpCrudPageBase<IRemittanceAppServices, RemittanceDto, Guid, GetListRemittancesInputDto, CreateUpdateRemittanceDto>

<Card>
    -        <CardHeader>
        <Row Class="justify-content-between">
            <Column ColumnSize="ColumnSize.IsAuto">
                <h2>@L["ReleasedRemittances"] </h2>
            </Column>
        </Row>
    </CardHeader>
    <CardBody>
        <DataGrid TItem="RemittanceDto"
                  Data="Entities"
                  ReadData="OnDataGridReadAsync"
                  TotalItems="TotalCount"
                  ShowPager="true"
                  PageSize="PageSize">

            <DataGridColumns>

                <DataGridColumn TItem="RemittanceDto"
                                Field="@nameof(RemittanceDto.Type)"
                                Caption=@L["Type"]>
                    <DisplayTemplate>
                        @L[$"Enum:RemittanceType.{(int)context.Type}"]
                    </DisplayTemplate>
                </DataGridColumn>


                <DataGridColumn TItem="RemittanceDto"
                                Field="@nameof(RemittanceDto.Amount)"
                                Caption=@L["Ammount"]>
                    <DisplayTemplate>
                        @context.Amount
                    </DisplayTemplate>
                </DataGridColumn>
                <DataGridColumn TItem="RemittanceDto"
                                Field="@nameof(RemittanceDto.TotalAmount)"
                                Caption=@L["TotalAmmount"]>
                    <DisplayTemplate>
                        @context.TotalAmount
                    </DisplayTemplate>
                </DataGridColumn>

                <DataGridColumn TItem="RemittanceDto"
                                Field="@nameof(RemittanceDto.Status)"
                                Caption=@L["Status"]>
                    <DisplayTemplate>
                        @context.Status
                    </DisplayTemplate>
                </DataGridColumn>
                <DataGridColumn TItem="RemittanceDto"
                                Caption=@L["Sender"]>
                    <DisplayTemplate>
                        @context.Sender.FirstName.ToString() @context.Sender.LastName.ToString()
                    </DisplayTemplate>
                </DataGridColumn>
                <DataGridColumn TItem="RemittanceDto"
                                Caption=@L["Receiver"]>
                    <DisplayTemplate>
                        @context.Receiver.FirstName.ToString() @context.Receiver.LastName.ToString()
                    </DisplayTemplate>
                </DataGridColumn>
                <DataGridColumn TItem="RemittanceDto"
                                Field="@nameof(RemittanceDto.CreationTime)"
                                Caption=@L["CreationTime"]>
                    <DisplayTemplate>
                        @context.CreationTime.ToShortDateString()
                    </DisplayTemplate>
                </DataGridColumn>
                <DataGridColumn TItem="RemittanceDto"
                                Field="@nameof(RemittanceDto.LastModificationTime)"
                                Caption=@L["LastModificationTime"]>
                    <DisplayTemplate>
                        @context.LastModificationTime
                    </DisplayTemplate>
                </DataGridColumn>
                <DataGridColumn TItem="RemittanceDto"
                                Caption="@L["IssuedBy"]">
                    <DisplayTemplate>
                        @context.IssuedBy.Name.ToString() 
                    </DisplayTemplate>
                </DataGridColumn>
                <DataGridColumn TItem="RemittanceDto"
                                Caption="@L["ApprovedBy"]">
                    <DisplayTemplate>
                        @context.ApprovedBy.Name.ToString()
                    </DisplayTemplate>
                </DataGridColumn>
                <DataGridColumn TItem="RemittanceDto"
                                Caption="@L["ReleasedBy"]">
                    <DisplayTemplate>
                        @context.ReleasedBy.Name.ToString()
                    </DisplayTemplate>
                </DataGridColumn>
                
                <DataGridColumn TItem="RemittanceDto"
                                Field="@nameof(RemittanceDto.Status)"
                                Caption=@L["Status"]>
                    <DisplayTemplate>
                        @L[$"Enum:StatusType.{(int)context.Status}"]
                    </DisplayTemplate>
                </DataGridColumn>

            </DataGridColumns>
        </DataGrid>
    </CardBody>
</Card>

@code {

    //  to get released Remittances
    private async Task GetRemittencAsync()
    {
        GetListInput.Status = StatusType.Released;
        var result = await AppService.GetListAsync(
            GetListInput
            );
        Entities = result.Items;
        TotalCount = (int)result.TotalCount;
    }

    // overriding  OnDataGridReadAsync to get released Remittances
    protected override async Task OnDataGridReadAsync(DataGridReadDataEventArgs<RemittanceDto> e)
    {
        //_logger.LogInformation("On Data Grid executed");
        await GetRemittencAsync();
        await InvokeAsync(StateHasChanged);
    }


}


